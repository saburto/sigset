#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data.Modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="sigset")]
	public partial class sigsetEntities : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArticulo(Articulo instance);
    partial void UpdateArticulo(Articulo instance);
    partial void DeleteArticulo(Articulo instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertContacto(Contacto instance);
    partial void UpdateContacto(Contacto instance);
    partial void DeleteContacto(Contacto instance);
    partial void InsertDetalle(Detalle instance);
    partial void UpdateDetalle(Detalle instance);
    partial void DeleteDetalle(Detalle instance);
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    partial void InsertEspecialidade(Especialidade instance);
    partial void UpdateEspecialidade(Especialidade instance);
    partial void DeleteEspecialidade(Especialidade instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertHistorial_Modificacion_Orden(Historial_Modificacion_Orden instance);
    partial void UpdateHistorial_Modificacion_Orden(Historial_Modificacion_Orden instance);
    partial void DeleteHistorial_Modificacion_Orden(Historial_Modificacion_Orden instance);
    partial void InsertLinea(Linea instance);
    partial void UpdateLinea(Linea instance);
    partial void DeleteLinea(Linea instance);
    partial void InsertMarca(Marca instance);
    partial void UpdateMarca(Marca instance);
    partial void DeleteMarca(Marca instance);
    partial void InsertNivel(Nivel instance);
    partial void UpdateNivel(Nivel instance);
    partial void DeleteNivel(Nivel instance);
    partial void InsertOrden_Trabajo(Orden_Trabajo instance);
    partial void UpdateOrden_Trabajo(Orden_Trabajo instance);
    partial void DeleteOrden_Trabajo(Orden_Trabajo instance);
    partial void InsertPorcentaje(Porcentaje instance);
    partial void UpdatePorcentaje(Porcentaje instance);
    partial void DeletePorcentaje(Porcentaje instance);
    partial void InsertPrecio_Garantia(Precio_Garantia instance);
    partial void UpdatePrecio_Garantia(Precio_Garantia instance);
    partial void DeletePrecio_Garantia(Precio_Garantia instance);
    partial void InsertTecnico(Tecnico instance);
    partial void UpdateTecnico(Tecnico instance);
    partial void DeleteTecnico(Tecnico instance);
    partial void InsertTipo_Articulo(Tipo_Articulo instance);
    partial void UpdateTipo_Articulo(Tipo_Articulo instance);
    partial void DeleteTipo_Articulo(Tipo_Articulo instance);
    partial void InsertTipo_Cargo(Tipo_Cargo instance);
    partial void UpdateTipo_Cargo(Tipo_Cargo instance);
    partial void DeleteTipo_Cargo(Tipo_Cargo instance);
    partial void InsertTipo_Contacto(Tipo_Contacto instance);
    partial void UpdateTipo_Contacto(Tipo_Contacto instance);
    partial void DeleteTipo_Contacto(Tipo_Contacto instance);
    partial void InsertTipo_Direccion(Tipo_Direccion instance);
    partial void UpdateTipo_Direccion(Tipo_Direccion instance);
    partial void DeleteTipo_Direccion(Tipo_Direccion instance);
    partial void InsertTipo_Especialidad(Tipo_Especialidad instance);
    partial void UpdateTipo_Especialidad(Tipo_Especialidad instance);
    partial void DeleteTipo_Especialidad(Tipo_Especialidad instance);
    partial void InsertTipo_Orden(Tipo_Orden instance);
    partial void UpdateTipo_Orden(Tipo_Orden instance);
    partial void DeleteTipo_Orden(Tipo_Orden instance);
    partial void InsertTipo_Usuario(Tipo_Usuario instance);
    partial void UpdateTipo_Usuario(Tipo_Usuario instance);
    partial void DeleteTipo_Usuario(Tipo_Usuario instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertDireccion(Direccion instance);
    partial void UpdateDireccion(Direccion instance);
    partial void DeleteDireccion(Direccion instance);
    partial void InsertComuna(Comuna instance);
    partial void UpdateComuna(Comuna instance);
    partial void DeleteComuna(Comuna instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertProvincia(Provincia instance);
    partial void UpdateProvincia(Provincia instance);
    partial void DeleteProvincia(Provincia instance);
    #endregion
		
		public sigsetEntities() : 
				base(global::Data.Properties.Settings.Default.sigsetConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public sigsetEntities(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sigsetEntities(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sigsetEntities(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sigsetEntities(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Articulo> Articulos
		{
			get
			{
				return this.GetTable<Articulo>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categorias
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Contacto> Contactos
		{
			get
			{
				return this.GetTable<Contacto>();
			}
		}
		
		public System.Data.Linq.Table<Detalle> Detalles
		{
			get
			{
				return this.GetTable<Detalle>();
			}
		}
		
		public System.Data.Linq.Table<Empleado> Empleados
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
		
		public System.Data.Linq.Table<Especialidade> Especialidades
		{
			get
			{
				return this.GetTable<Especialidade>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estados
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<Historial_Modificacion_Orden> Historial_Modificacion_Ordens
		{
			get
			{
				return this.GetTable<Historial_Modificacion_Orden>();
			}
		}
		
		public System.Data.Linq.Table<Linea> Lineas
		{
			get
			{
				return this.GetTable<Linea>();
			}
		}
		
		public System.Data.Linq.Table<Marca> Marcas
		{
			get
			{
				return this.GetTable<Marca>();
			}
		}
		
		public System.Data.Linq.Table<Nivel> Nivels
		{
			get
			{
				return this.GetTable<Nivel>();
			}
		}
		
		public System.Data.Linq.Table<Orden_Trabajo> Orden_Trabajos
		{
			get
			{
				return this.GetTable<Orden_Trabajo>();
			}
		}
		
		public System.Data.Linq.Table<Porcentaje> Porcentajes
		{
			get
			{
				return this.GetTable<Porcentaje>();
			}
		}
		
		public System.Data.Linq.Table<Precio_Garantia> Precio_Garantias
		{
			get
			{
				return this.GetTable<Precio_Garantia>();
			}
		}
		
		public System.Data.Linq.Table<Tecnico> Tecnicos
		{
			get
			{
				return this.GetTable<Tecnico>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Articulo> Tipo_Articulos
		{
			get
			{
				return this.GetTable<Tipo_Articulo>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Cargo> Tipo_Cargos
		{
			get
			{
				return this.GetTable<Tipo_Cargo>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Contacto> Tipo_Contactos
		{
			get
			{
				return this.GetTable<Tipo_Contacto>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Direccion> Tipo_Direccions
		{
			get
			{
				return this.GetTable<Tipo_Direccion>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Especialidad> Tipo_Especialidads
		{
			get
			{
				return this.GetTable<Tipo_Especialidad>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Orden> Tipo_Ordens
		{
			get
			{
				return this.GetTable<Tipo_Orden>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Usuario> Tipo_Usuarios
		{
			get
			{
				return this.GetTable<Tipo_Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Direccion> Direccions
		{
			get
			{
				return this.GetTable<Direccion>();
			}
		}
		
		public System.Data.Linq.Table<Comuna> Comunas
		{
			get
			{
				return this.GetTable<Comuna>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<Provincia> Provincias
		{
			get
			{
				return this.GetTable<Provincia>();
			}
		}
	}
	
	[Table(Name="dbo.Articulo")]
	public partial class Articulo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Modelo;
		
		private decimal _Marca;
		
		private decimal _Tipo_Articulo;
		
		private decimal _Categoria;
		
		private System.Nullable<decimal> _Precio_Garantia;
		
		private System.Nullable<decimal> _Linea;
		
		private EntitySet<Orden_Trabajo> _Orden_Trabajos;
		
		private EntityRef<Categoria> _Categoria1;
		
		private EntityRef<Linea> _Linea1;
		
		private EntityRef<Marca> _Marca1;
		
		private EntityRef<Precio_Garantia> _Precio_Garantia1;
		
		private EntityRef<Tipo_Articulo> _Tipo_Articulo1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnModeloChanging(string value);
    partial void OnModeloChanged();
    partial void OnMarcaChanging(decimal value);
    partial void OnMarcaChanged();
    partial void OnTipo_ArticuloChanging(decimal value);
    partial void OnTipo_ArticuloChanged();
    partial void OnCategoriaChanging(decimal value);
    partial void OnCategoriaChanged();
    partial void OnPrecio_GarantiaChanging(System.Nullable<decimal> value);
    partial void OnPrecio_GarantiaChanged();
    partial void OnLineaChanging(System.Nullable<decimal> value);
    partial void OnLineaChanged();
    #endregion
		
		public Articulo()
		{
			this._Orden_Trabajos = new EntitySet<Orden_Trabajo>(new Action<Orden_Trabajo>(this.attach_Orden_Trabajos), new Action<Orden_Trabajo>(this.detach_Orden_Trabajos));
			this._Categoria1 = default(EntityRef<Categoria>);
			this._Linea1 = default(EntityRef<Linea>);
			this._Marca1 = default(EntityRef<Marca>);
			this._Precio_Garantia1 = default(EntityRef<Precio_Garantia>);
			this._Tipo_Articulo1 = default(EntityRef<Tipo_Articulo>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Modelo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Modelo
		{
			get
			{
				return this._Modelo;
			}
			set
			{
				if ((this._Modelo != value))
				{
					this.OnModeloChanging(value);
					this.SendPropertyChanging();
					this._Modelo = value;
					this.SendPropertyChanged("Modelo");
					this.OnModeloChanged();
				}
			}
		}
		
		[Column(Storage="_Marca", DbType="Decimal(18,0) NOT NULL")]
		public decimal Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					if (this._Marca1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[Column(Storage="_Tipo_Articulo", DbType="Decimal(18,0) NOT NULL")]
		public decimal Tipo_Articulo
		{
			get
			{
				return this._Tipo_Articulo;
			}
			set
			{
				if ((this._Tipo_Articulo != value))
				{
					if (this._Tipo_Articulo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipo_ArticuloChanging(value);
					this.SendPropertyChanging();
					this._Tipo_Articulo = value;
					this.SendPropertyChanged("Tipo_Articulo");
					this.OnTipo_ArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_Categoria", DbType="Decimal(18,0) NOT NULL")]
		public decimal Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					if (this._Categoria1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[Column(Storage="_Precio_Garantia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Precio_Garantia
		{
			get
			{
				return this._Precio_Garantia;
			}
			set
			{
				if ((this._Precio_Garantia != value))
				{
					if (this._Precio_Garantia1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrecio_GarantiaChanging(value);
					this.SendPropertyChanging();
					this._Precio_Garantia = value;
					this.SendPropertyChanged("Precio_Garantia");
					this.OnPrecio_GarantiaChanged();
				}
			}
		}
		
		[Column(Storage="_Linea", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Linea
		{
			get
			{
				return this._Linea;
			}
			set
			{
				if ((this._Linea != value))
				{
					if (this._Linea1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineaChanging(value);
					this.SendPropertyChanging();
					this._Linea = value;
					this.SendPropertyChanged("Linea");
					this.OnLineaChanged();
				}
			}
		}
		
		[Association(Name="Articulo_Orden_Trabajo", Storage="_Orden_Trabajos", ThisKey="Id", OtherKey="Id_Articulo")]
		public EntitySet<Orden_Trabajo> Orden_Trabajos
		{
			get
			{
				return this._Orden_Trabajos;
			}
			set
			{
				this._Orden_Trabajos.Assign(value);
			}
		}
		
		[Association(Name="Categoria_Articulo", Storage="_Categoria1", ThisKey="Categoria", OtherKey="Id_Categoria", IsForeignKey=true)]
		public Categoria Categoria1
		{
			get
			{
				return this._Categoria1.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria1.Entity;
				if (((previousValue != value) 
							|| (this._Categoria1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria1.Entity = null;
						previousValue.Articulos.Remove(this);
					}
					this._Categoria1.Entity = value;
					if ((value != null))
					{
						value.Articulos.Add(this);
						this._Categoria = value.Id_Categoria;
					}
					else
					{
						this._Categoria = default(decimal);
					}
					this.SendPropertyChanged("Categoria1");
				}
			}
		}
		
		[Association(Name="Linea_Articulo", Storage="_Linea1", ThisKey="Linea", OtherKey="Id_Linea", IsForeignKey=true)]
		public Linea Linea1
		{
			get
			{
				return this._Linea1.Entity;
			}
			set
			{
				Linea previousValue = this._Linea1.Entity;
				if (((previousValue != value) 
							|| (this._Linea1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Linea1.Entity = null;
						previousValue.Articulos.Remove(this);
					}
					this._Linea1.Entity = value;
					if ((value != null))
					{
						value.Articulos.Add(this);
						this._Linea = value.Id_Linea;
					}
					else
					{
						this._Linea = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Linea1");
				}
			}
		}
		
		[Association(Name="Marca_Articulo", Storage="_Marca1", ThisKey="Marca", OtherKey="Id_Marca", IsForeignKey=true)]
		public Marca Marca1
		{
			get
			{
				return this._Marca1.Entity;
			}
			set
			{
				Marca previousValue = this._Marca1.Entity;
				if (((previousValue != value) 
							|| (this._Marca1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca1.Entity = null;
						previousValue.Articulos.Remove(this);
					}
					this._Marca1.Entity = value;
					if ((value != null))
					{
						value.Articulos.Add(this);
						this._Marca = value.Id_Marca;
					}
					else
					{
						this._Marca = default(decimal);
					}
					this.SendPropertyChanged("Marca1");
				}
			}
		}
		
		[Association(Name="Precio_Garantia_Articulo", Storage="_Precio_Garantia1", ThisKey="Precio_Garantia", OtherKey="Id_Precio_Garantia", IsForeignKey=true)]
		public Precio_Garantia Precio_Garantia1
		{
			get
			{
				return this._Precio_Garantia1.Entity;
			}
			set
			{
				Precio_Garantia previousValue = this._Precio_Garantia1.Entity;
				if (((previousValue != value) 
							|| (this._Precio_Garantia1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Precio_Garantia1.Entity = null;
						previousValue.Articulos.Remove(this);
					}
					this._Precio_Garantia1.Entity = value;
					if ((value != null))
					{
						value.Articulos.Add(this);
						this._Precio_Garantia = value.Id_Precio_Garantia;
					}
					else
					{
						this._Precio_Garantia = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Precio_Garantia1");
				}
			}
		}
		
		[Association(Name="Tipo_Articulo_Articulo", Storage="_Tipo_Articulo1", ThisKey="Tipo_Articulo", OtherKey="Id_Tipo_Articulo", IsForeignKey=true)]
		public Tipo_Articulo Tipo_Articulo1
		{
			get
			{
				return this._Tipo_Articulo1.Entity;
			}
			set
			{
				Tipo_Articulo previousValue = this._Tipo_Articulo1.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Articulo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Articulo1.Entity = null;
						previousValue.Articulos.Remove(this);
					}
					this._Tipo_Articulo1.Entity = value;
					if ((value != null))
					{
						value.Articulos.Add(this);
						this._Tipo_Articulo = value.Id_Tipo_Articulo;
					}
					else
					{
						this._Tipo_Articulo = default(decimal);
					}
					this.SendPropertyChanged("Tipo_Articulo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orden_Trabajos(Orden_Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = this;
		}
		
		private void detach_Orden_Trabajos(Orden_Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Articulo = null;
		}
	}
	
	[Table(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Categoria;
		
		private string _Descripcion;
		
		private EntitySet<Articulo> _Articulos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_CategoriaChanging(decimal value);
    partial void OnId_CategoriaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Categoria()
		{
			this._Articulos = new EntitySet<Articulo>(new Action<Articulo>(this.attach_Articulos), new Action<Articulo>(this.detach_Articulos));
			OnCreated();
		}
		
		[Column(Storage="_Id_Categoria", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Categoria
		{
			get
			{
				return this._Id_Categoria;
			}
			set
			{
				if ((this._Id_Categoria != value))
				{
					this.OnId_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._Id_Categoria = value;
					this.SendPropertyChanged("Id_Categoria");
					this.OnId_CategoriaChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Categoria_Articulo", Storage="_Articulos", ThisKey="Id_Categoria", OtherKey="Categoria")]
		public EntitySet<Articulo> Articulos
		{
			get
			{
				return this._Articulos;
			}
			set
			{
				this._Articulos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Categoria1 = this;
		}
		
		private void detach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Categoria1 = null;
		}
	}
	
	[Table(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Rut;
		
		private string _Nombre;
		
		private string _Apellido_Paterno;
		
		private string _Apellido_Materno;
		
		private EntitySet<Contacto> _Contactos;
		
		private EntitySet<Orden_Trabajo> _Orden_Trabajos;
		
		private EntitySet<Direccion> _Direccions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRutChanging(decimal value);
    partial void OnRutChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellido_PaternoChanging(string value);
    partial void OnApellido_PaternoChanged();
    partial void OnApellido_MaternoChanging(string value);
    partial void OnApellido_MaternoChanged();
    #endregion
		
		public Cliente()
		{
			this._Contactos = new EntitySet<Contacto>(new Action<Contacto>(this.attach_Contactos), new Action<Contacto>(this.detach_Contactos));
			this._Orden_Trabajos = new EntitySet<Orden_Trabajo>(new Action<Orden_Trabajo>(this.attach_Orden_Trabajos), new Action<Orden_Trabajo>(this.detach_Orden_Trabajos));
			this._Direccions = new EntitySet<Direccion>(new Action<Direccion>(this.attach_Direccions), new Action<Direccion>(this.detach_Direccions));
			OnCreated();
		}
		
		[Column(Storage="_Rut", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Rut
		{
			get
			{
				return this._Rut;
			}
			set
			{
				if ((this._Rut != value))
				{
					this.OnRutChanging(value);
					this.SendPropertyChanging();
					this._Rut = value;
					this.SendPropertyChanged("Rut");
					this.OnRutChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_Apellido_Paterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido_Paterno
		{
			get
			{
				return this._Apellido_Paterno;
			}
			set
			{
				if ((this._Apellido_Paterno != value))
				{
					this.OnApellido_PaternoChanging(value);
					this.SendPropertyChanging();
					this._Apellido_Paterno = value;
					this.SendPropertyChanged("Apellido_Paterno");
					this.OnApellido_PaternoChanged();
				}
			}
		}
		
		[Column(Storage="_Apellido_Materno", DbType="VarChar(50)")]
		public string Apellido_Materno
		{
			get
			{
				return this._Apellido_Materno;
			}
			set
			{
				if ((this._Apellido_Materno != value))
				{
					this.OnApellido_MaternoChanging(value);
					this.SendPropertyChanging();
					this._Apellido_Materno = value;
					this.SendPropertyChanged("Apellido_Materno");
					this.OnApellido_MaternoChanged();
				}
			}
		}
		
		[Association(Name="Cliente_Contacto", Storage="_Contactos", ThisKey="Rut", OtherKey="Rut")]
		public EntitySet<Contacto> Contactos
		{
			get
			{
				return this._Contactos;
			}
			set
			{
				this._Contactos.Assign(value);
			}
		}
		
		[Association(Name="Cliente_Orden_Trabajo", Storage="_Orden_Trabajos", ThisKey="Rut", OtherKey="Id_Cliente")]
		public EntitySet<Orden_Trabajo> Orden_Trabajos
		{
			get
			{
				return this._Orden_Trabajos;
			}
			set
			{
				this._Orden_Trabajos.Assign(value);
			}
		}
		
		[Association(Name="Cliente_Direccion", Storage="_Direccions", ThisKey="Rut", OtherKey="Rut")]
		public EntitySet<Direccion> Direccions
		{
			get
			{
				return this._Direccions;
			}
			set
			{
				this._Direccions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Orden_Trabajos(Orden_Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Orden_Trabajos(Orden_Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Direccions(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Direccions(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[Table(Name="dbo.Contacto")]
	public partial class Contacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private decimal _Rut;
		
		private System.Nullable<decimal> _Tipo_Contacto;
		
		private string _Valor_Contacto;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Tipo_Contacto> _Tipo_Contacto1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnRutChanging(decimal value);
    partial void OnRutChanged();
    partial void OnTipo_ContactoChanging(System.Nullable<decimal> value);
    partial void OnTipo_ContactoChanged();
    partial void OnValor_ContactoChanging(string value);
    partial void OnValor_ContactoChanged();
    #endregion
		
		public Contacto()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Tipo_Contacto1 = default(EntityRef<Tipo_Contacto>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Rut", DbType="Decimal(10,0) NOT NULL")]
		public decimal Rut
		{
			get
			{
				return this._Rut;
			}
			set
			{
				if ((this._Rut != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRutChanging(value);
					this.SendPropertyChanging();
					this._Rut = value;
					this.SendPropertyChanged("Rut");
					this.OnRutChanged();
				}
			}
		}
		
		[Column(Storage="_Tipo_Contacto", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Tipo_Contacto
		{
			get
			{
				return this._Tipo_Contacto;
			}
			set
			{
				if ((this._Tipo_Contacto != value))
				{
					if (this._Tipo_Contacto1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipo_ContactoChanging(value);
					this.SendPropertyChanging();
					this._Tipo_Contacto = value;
					this.SendPropertyChanged("Tipo_Contacto");
					this.OnTipo_ContactoChanged();
				}
			}
		}
		
		[Column(Storage="_Valor_Contacto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Valor_Contacto
		{
			get
			{
				return this._Valor_Contacto;
			}
			set
			{
				if ((this._Valor_Contacto != value))
				{
					this.OnValor_ContactoChanging(value);
					this.SendPropertyChanging();
					this._Valor_Contacto = value;
					this.SendPropertyChanged("Valor_Contacto");
					this.OnValor_ContactoChanged();
				}
			}
		}
		
		[Association(Name="Cliente_Contacto", Storage="_Cliente", ThisKey="Rut", OtherKey="Rut", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Contactos.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Contactos.Add(this);
						this._Rut = value.Rut;
					}
					else
					{
						this._Rut = default(decimal);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[Association(Name="Tipo_Contacto_Contacto", Storage="_Tipo_Contacto1", ThisKey="Tipo_Contacto", OtherKey="Id_Tipo_Contacto", IsForeignKey=true)]
		public Tipo_Contacto Tipo_Contacto1
		{
			get
			{
				return this._Tipo_Contacto1.Entity;
			}
			set
			{
				Tipo_Contacto previousValue = this._Tipo_Contacto1.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Contacto1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Contacto1.Entity = null;
						previousValue.Contactos.Remove(this);
					}
					this._Tipo_Contacto1.Entity = value;
					if ((value != null))
					{
						value.Contactos.Add(this);
						this._Tipo_Contacto = value.Id_Tipo_Contacto;
					}
					else
					{
						this._Tipo_Contacto = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Tipo_Contacto1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Detalle")]
	public partial class Detalle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private decimal _Id_Orden;
		
		private System.Nullable<System.DateTime> _Fecha_Creacion;
		
		private System.Nullable<decimal> _Id_Usuario;
		
		private string _Detalle1;
		
		private decimal _Estado;
		
		private EntityRef<Estado> _Estado1;
		
		private EntityRef<Orden_Trabajo> _Orden_Trabajo;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnId_OrdenChanging(decimal value);
    partial void OnId_OrdenChanged();
    partial void OnFecha_CreacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_CreacionChanged();
    partial void OnId_UsuarioChanging(System.Nullable<decimal> value);
    partial void OnId_UsuarioChanged();
    partial void OnDetalle1Changing(string value);
    partial void OnDetalle1Changed();
    partial void OnEstadoChanging(decimal value);
    partial void OnEstadoChanged();
    #endregion
		
		public Detalle()
		{
			this._Estado1 = default(EntityRef<Estado>);
			this._Orden_Trabajo = default(EntityRef<Orden_Trabajo>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Id_Orden", DbType="Decimal(18,0) NOT NULL")]
		public decimal Id_Orden
		{
			get
			{
				return this._Id_Orden;
			}
			set
			{
				if ((this._Id_Orden != value))
				{
					if (this._Orden_Trabajo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_OrdenChanging(value);
					this.SendPropertyChanging();
					this._Id_Orden = value;
					this.SendPropertyChanged("Id_Orden");
					this.OnId_OrdenChanged();
				}
			}
		}
		
		[Column(Storage="_Fecha_Creacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha_Creacion
		{
			get
			{
				return this._Fecha_Creacion;
			}
			set
			{
				if ((this._Fecha_Creacion != value))
				{
					this.OnFecha_CreacionChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Creacion = value;
					this.SendPropertyChanged("Fecha_Creacion");
					this.OnFecha_CreacionChanged();
				}
			}
		}
		
		[Column(Storage="_Id_Usuario", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Id_Usuario
		{
			get
			{
				return this._Id_Usuario;
			}
			set
			{
				if ((this._Id_Usuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._Id_Usuario = value;
					this.SendPropertyChanged("Id_Usuario");
					this.OnId_UsuarioChanged();
				}
			}
		}
		
		[Column(Name="Detalle", Storage="_Detalle1", DbType="VarChar(250)")]
		public string Detalle1
		{
			get
			{
				return this._Detalle1;
			}
			set
			{
				if ((this._Detalle1 != value))
				{
					this.OnDetalle1Changing(value);
					this.SendPropertyChanging();
					this._Detalle1 = value;
					this.SendPropertyChanged("Detalle1");
					this.OnDetalle1Changed();
				}
			}
		}
		
		[Column(Storage="_Estado", DbType="Decimal(18,0) NOT NULL")]
		public decimal Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estado1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[Association(Name="Estado_Detalle", Storage="_Estado1", ThisKey="Estado", OtherKey="Id_Estado", IsForeignKey=true)]
		public Estado Estado1
		{
			get
			{
				return this._Estado1.Entity;
			}
			set
			{
				Estado previousValue = this._Estado1.Entity;
				if (((previousValue != value) 
							|| (this._Estado1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado1.Entity = null;
						previousValue.Detalles.Remove(this);
					}
					this._Estado1.Entity = value;
					if ((value != null))
					{
						value.Detalles.Add(this);
						this._Estado = value.Id_Estado;
					}
					else
					{
						this._Estado = default(decimal);
					}
					this.SendPropertyChanged("Estado1");
				}
			}
		}
		
		[Association(Name="Orden_Trabajo_Detalle", Storage="_Orden_Trabajo", ThisKey="Id_Orden", OtherKey="Id", IsForeignKey=true)]
		public Orden_Trabajo Orden_Trabajo
		{
			get
			{
				return this._Orden_Trabajo.Entity;
			}
			set
			{
				Orden_Trabajo previousValue = this._Orden_Trabajo.Entity;
				if (((previousValue != value) 
							|| (this._Orden_Trabajo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orden_Trabajo.Entity = null;
						previousValue.Detalles.Remove(this);
					}
					this._Orden_Trabajo.Entity = value;
					if ((value != null))
					{
						value.Detalles.Add(this);
						this._Id_Orden = value.Id;
					}
					else
					{
						this._Id_Orden = default(decimal);
					}
					this.SendPropertyChanged("Orden_Trabajo");
				}
			}
		}
		
		[Association(Name="Usuario_Detalle", Storage="_Usuario", ThisKey="Id_Usuario", OtherKey="Id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Detalles.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Detalles.Add(this);
						this._Id_Usuario = value.Id;
					}
					else
					{
						this._Id_Usuario = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Rut;
		
		private string _Nombre;
		
		private string _Apellido_Paterno;
		
		private string _Apellido_Materno;
		
		private decimal _Tipo_Cargo;
		
		private EntityRef<Tecnico> _Tecnico;
		
		private EntitySet<Usuario> _Usuarios;
		
		private EntityRef<Tipo_Cargo> _Tipo_Cargo1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRutChanging(decimal value);
    partial void OnRutChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellido_PaternoChanging(string value);
    partial void OnApellido_PaternoChanged();
    partial void OnApellido_MaternoChanging(string value);
    partial void OnApellido_MaternoChanged();
    partial void OnTipo_CargoChanging(decimal value);
    partial void OnTipo_CargoChanged();
    #endregion
		
		public Empleado()
		{
			this._Tecnico = default(EntityRef<Tecnico>);
			this._Usuarios = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuarios), new Action<Usuario>(this.detach_Usuarios));
			this._Tipo_Cargo1 = default(EntityRef<Tipo_Cargo>);
			OnCreated();
		}
		
		[Column(Storage="_Rut", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Rut
		{
			get
			{
				return this._Rut;
			}
			set
			{
				if ((this._Rut != value))
				{
					this.OnRutChanging(value);
					this.SendPropertyChanging();
					this._Rut = value;
					this.SendPropertyChanged("Rut");
					this.OnRutChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_Apellido_Paterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido_Paterno
		{
			get
			{
				return this._Apellido_Paterno;
			}
			set
			{
				if ((this._Apellido_Paterno != value))
				{
					this.OnApellido_PaternoChanging(value);
					this.SendPropertyChanging();
					this._Apellido_Paterno = value;
					this.SendPropertyChanged("Apellido_Paterno");
					this.OnApellido_PaternoChanged();
				}
			}
		}
		
		[Column(Storage="_Apellido_Materno", DbType="VarChar(50)")]
		public string Apellido_Materno
		{
			get
			{
				return this._Apellido_Materno;
			}
			set
			{
				if ((this._Apellido_Materno != value))
				{
					this.OnApellido_MaternoChanging(value);
					this.SendPropertyChanging();
					this._Apellido_Materno = value;
					this.SendPropertyChanged("Apellido_Materno");
					this.OnApellido_MaternoChanged();
				}
			}
		}
		
		[Column(Storage="_Tipo_Cargo", DbType="Decimal(18,0) NOT NULL")]
		public decimal Tipo_Cargo
		{
			get
			{
				return this._Tipo_Cargo;
			}
			set
			{
				if ((this._Tipo_Cargo != value))
				{
					if (this._Tipo_Cargo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipo_CargoChanging(value);
					this.SendPropertyChanging();
					this._Tipo_Cargo = value;
					this.SendPropertyChanged("Tipo_Cargo");
					this.OnTipo_CargoChanged();
				}
			}
		}
		
		[Association(Name="Empleado_Tecnico", Storage="_Tecnico", ThisKey="Rut", OtherKey="Rut", IsUnique=true, IsForeignKey=false)]
		public Tecnico Tecnico
		{
			get
			{
				return this._Tecnico.Entity;
			}
			set
			{
				Tecnico previousValue = this._Tecnico.Entity;
				if (((previousValue != value) 
							|| (this._Tecnico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tecnico.Entity = null;
						previousValue.Empleado = null;
					}
					this._Tecnico.Entity = value;
					if ((value != null))
					{
						value.Empleado = this;
					}
					this.SendPropertyChanged("Tecnico");
				}
			}
		}
		
		[Association(Name="Empleado_Usuario", Storage="_Usuarios", ThisKey="Rut", OtherKey="Empleado")]
		public EntitySet<Usuario> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		[Association(Name="Tipo_Cargo_Empleado", Storage="_Tipo_Cargo1", ThisKey="Tipo_Cargo", OtherKey="Id_Tipo_Cargo", IsForeignKey=true)]
		public Tipo_Cargo Tipo_Cargo1
		{
			get
			{
				return this._Tipo_Cargo1.Entity;
			}
			set
			{
				Tipo_Cargo previousValue = this._Tipo_Cargo1.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Cargo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Cargo1.Entity = null;
						previousValue.Empleados.Remove(this);
					}
					this._Tipo_Cargo1.Entity = value;
					if ((value != null))
					{
						value.Empleados.Add(this);
						this._Tipo_Cargo = value.Id_Tipo_Cargo;
					}
					else
					{
						this._Tipo_Cargo = default(decimal);
					}
					this.SendPropertyChanged("Tipo_Cargo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Empleado1 = this;
		}
		
		private void detach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Empleado1 = null;
		}
	}
	
	[Table(Name="dbo.Especialidades")]
	public partial class Especialidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private decimal _Id_Tecnico;
		
		private decimal _Tipo_Especialidad;
		
		private EntityRef<Tecnico> _Tecnico;
		
		private EntityRef<Tipo_Especialidad> _Tipo_Especialidad1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnId_TecnicoChanging(decimal value);
    partial void OnId_TecnicoChanged();
    partial void OnTipo_EspecialidadChanging(decimal value);
    partial void OnTipo_EspecialidadChanged();
    #endregion
		
		public Especialidade()
		{
			this._Tecnico = default(EntityRef<Tecnico>);
			this._Tipo_Especialidad1 = default(EntityRef<Tipo_Especialidad>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Id_Tecnico", DbType="Decimal(10,0) NOT NULL")]
		public decimal Id_Tecnico
		{
			get
			{
				return this._Id_Tecnico;
			}
			set
			{
				if ((this._Id_Tecnico != value))
				{
					if (this._Tecnico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_TecnicoChanging(value);
					this.SendPropertyChanging();
					this._Id_Tecnico = value;
					this.SendPropertyChanged("Id_Tecnico");
					this.OnId_TecnicoChanged();
				}
			}
		}
		
		[Column(Storage="_Tipo_Especialidad", DbType="Decimal(18,0) NOT NULL")]
		public decimal Tipo_Especialidad
		{
			get
			{
				return this._Tipo_Especialidad;
			}
			set
			{
				if ((this._Tipo_Especialidad != value))
				{
					if (this._Tipo_Especialidad1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipo_EspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Tipo_Especialidad = value;
					this.SendPropertyChanged("Tipo_Especialidad");
					this.OnTipo_EspecialidadChanged();
				}
			}
		}
		
		[Association(Name="Tecnico_Especialidade", Storage="_Tecnico", ThisKey="Id_Tecnico", OtherKey="Rut", IsForeignKey=true)]
		public Tecnico Tecnico
		{
			get
			{
				return this._Tecnico.Entity;
			}
			set
			{
				Tecnico previousValue = this._Tecnico.Entity;
				if (((previousValue != value) 
							|| (this._Tecnico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tecnico.Entity = null;
						previousValue.Especialidades.Remove(this);
					}
					this._Tecnico.Entity = value;
					if ((value != null))
					{
						value.Especialidades.Add(this);
						this._Id_Tecnico = value.Rut;
					}
					else
					{
						this._Id_Tecnico = default(decimal);
					}
					this.SendPropertyChanged("Tecnico");
				}
			}
		}
		
		[Association(Name="Tipo_Especialidad_Especialidade", Storage="_Tipo_Especialidad1", ThisKey="Tipo_Especialidad", OtherKey="Id_Tipo_Especialidad", IsForeignKey=true)]
		public Tipo_Especialidad Tipo_Especialidad1
		{
			get
			{
				return this._Tipo_Especialidad1.Entity;
			}
			set
			{
				Tipo_Especialidad previousValue = this._Tipo_Especialidad1.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Especialidad1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Especialidad1.Entity = null;
						previousValue.Especialidades.Remove(this);
					}
					this._Tipo_Especialidad1.Entity = value;
					if ((value != null))
					{
						value.Especialidades.Add(this);
						this._Tipo_Especialidad = value.Id_Tipo_Especialidad;
					}
					else
					{
						this._Tipo_Especialidad = default(decimal);
					}
					this.SendPropertyChanged("Tipo_Especialidad1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Estado;
		
		private string _Descripcion;
		
		private EntitySet<Detalle> _Detalles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_EstadoChanging(decimal value);
    partial void OnId_EstadoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Estado()
		{
			this._Detalles = new EntitySet<Detalle>(new Action<Detalle>(this.attach_Detalles), new Action<Detalle>(this.detach_Detalles));
			OnCreated();
		}
		
		[Column(Storage="_Id_Estado", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Estado
		{
			get
			{
				return this._Id_Estado;
			}
			set
			{
				if ((this._Id_Estado != value))
				{
					this.OnId_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Id_Estado = value;
					this.SendPropertyChanged("Id_Estado");
					this.OnId_EstadoChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Estado_Detalle", Storage="_Detalles", ThisKey="Id_Estado", OtherKey="Estado")]
		public EntitySet<Detalle> Detalles
		{
			get
			{
				return this._Detalles;
			}
			set
			{
				this._Detalles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalles(Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Estado1 = this;
		}
		
		private void detach_Detalles(Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Estado1 = null;
		}
	}
	
	[Table(Name="dbo.Historial_Modificacion_Orden")]
	public partial class Historial_Modificacion_Orden : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private decimal _Id_Orden;
		
		private decimal _Usuario;
		
		private System.DateTime _Fecha;
		
		private string _Detalle;
		
		private EntityRef<Orden_Trabajo> _Orden_Trabajo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnId_OrdenChanging(decimal value);
    partial void OnId_OrdenChanged();
    partial void OnUsuarioChanging(decimal value);
    partial void OnUsuarioChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Historial_Modificacion_Orden()
		{
			this._Orden_Trabajo = default(EntityRef<Orden_Trabajo>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Id_Orden", DbType="Decimal(18,0) NOT NULL")]
		public decimal Id_Orden
		{
			get
			{
				return this._Id_Orden;
			}
			set
			{
				if ((this._Id_Orden != value))
				{
					if (this._Orden_Trabajo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_OrdenChanging(value);
					this.SendPropertyChanging();
					this._Id_Orden = value;
					this.SendPropertyChanged("Id_Orden");
					this.OnId_OrdenChanged();
				}
			}
		}
		
		[Column(Storage="_Usuario", DbType="Decimal(18,0) NOT NULL")]
		public decimal Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[Column(Storage="_Detalle", DbType="VarChar(100)")]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[Association(Name="Orden_Trabajo_Historial_Modificacion_Orden", Storage="_Orden_Trabajo", ThisKey="Id_Orden", OtherKey="Id", IsForeignKey=true)]
		public Orden_Trabajo Orden_Trabajo
		{
			get
			{
				return this._Orden_Trabajo.Entity;
			}
			set
			{
				Orden_Trabajo previousValue = this._Orden_Trabajo.Entity;
				if (((previousValue != value) 
							|| (this._Orden_Trabajo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orden_Trabajo.Entity = null;
						previousValue.Historial_Modificacion_Ordens.Remove(this);
					}
					this._Orden_Trabajo.Entity = value;
					if ((value != null))
					{
						value.Historial_Modificacion_Ordens.Add(this);
						this._Id_Orden = value.Id;
					}
					else
					{
						this._Id_Orden = default(decimal);
					}
					this.SendPropertyChanged("Orden_Trabajo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Linea")]
	public partial class Linea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Linea;
		
		private string _Descripcion;
		
		private EntitySet<Articulo> _Articulos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_LineaChanging(decimal value);
    partial void OnId_LineaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Linea()
		{
			this._Articulos = new EntitySet<Articulo>(new Action<Articulo>(this.attach_Articulos), new Action<Articulo>(this.detach_Articulos));
			OnCreated();
		}
		
		[Column(Storage="_Id_Linea", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Linea
		{
			get
			{
				return this._Id_Linea;
			}
			set
			{
				if ((this._Id_Linea != value))
				{
					this.OnId_LineaChanging(value);
					this.SendPropertyChanging();
					this._Id_Linea = value;
					this.SendPropertyChanged("Id_Linea");
					this.OnId_LineaChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Linea_Articulo", Storage="_Articulos", ThisKey="Id_Linea", OtherKey="Linea")]
		public EntitySet<Articulo> Articulos
		{
			get
			{
				return this._Articulos;
			}
			set
			{
				this._Articulos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Linea1 = this;
		}
		
		private void detach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Linea1 = null;
		}
	}
	
	[Table(Name="dbo.Marca")]
	public partial class Marca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Marca;
		
		private string _Descripcion;
		
		private EntitySet<Articulo> _Articulos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_MarcaChanging(decimal value);
    partial void OnId_MarcaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Marca()
		{
			this._Articulos = new EntitySet<Articulo>(new Action<Articulo>(this.attach_Articulos), new Action<Articulo>(this.detach_Articulos));
			OnCreated();
		}
		
		[Column(Storage="_Id_Marca", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Marca
		{
			get
			{
				return this._Id_Marca;
			}
			set
			{
				if ((this._Id_Marca != value))
				{
					this.OnId_MarcaChanging(value);
					this.SendPropertyChanging();
					this._Id_Marca = value;
					this.SendPropertyChanged("Id_Marca");
					this.OnId_MarcaChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Marca_Articulo", Storage="_Articulos", ThisKey="Id_Marca", OtherKey="Marca")]
		public EntitySet<Articulo> Articulos
		{
			get
			{
				return this._Articulos;
			}
			set
			{
				this._Articulos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Marca1 = this;
		}
		
		private void detach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Marca1 = null;
		}
	}
	
	[Table(Name="dbo.Nivel")]
	public partial class Nivel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Nivel;
		
		private string _Descripcion;
		
		private EntitySet<Tecnico> _Tecnicos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_NivelChanging(decimal value);
    partial void OnId_NivelChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Nivel()
		{
			this._Tecnicos = new EntitySet<Tecnico>(new Action<Tecnico>(this.attach_Tecnicos), new Action<Tecnico>(this.detach_Tecnicos));
			OnCreated();
		}
		
		[Column(Storage="_Id_Nivel", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Nivel
		{
			get
			{
				return this._Id_Nivel;
			}
			set
			{
				if ((this._Id_Nivel != value))
				{
					this.OnId_NivelChanging(value);
					this.SendPropertyChanging();
					this._Id_Nivel = value;
					this.SendPropertyChanged("Id_Nivel");
					this.OnId_NivelChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Nivel_Tecnico", Storage="_Tecnicos", ThisKey="Id_Nivel", OtherKey="Nivel")]
		public EntitySet<Tecnico> Tecnicos
		{
			get
			{
				return this._Tecnicos;
			}
			set
			{
				this._Tecnicos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tecnicos(Tecnico entity)
		{
			this.SendPropertyChanging();
			entity.Nivel1 = this;
		}
		
		private void detach_Tecnicos(Tecnico entity)
		{
			this.SendPropertyChanging();
			entity.Nivel1 = null;
		}
	}
	
	[Table(Name="dbo.Orden_Trabajo")]
	public partial class Orden_Trabajo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private decimal _Id_Cliente;
		
		private decimal _Id_Articulo;
		
		private string _Serie;
		
		private System.DateTime _Fecha_Ingreso;
		
		private System.DateTime _Fecha_Entrega;
		
		private string _Falla;
		
		private System.Nullable<decimal> _Condicion_Articulo;
		
		private decimal _Id_Tecnico_Asignado;
		
		private System.Nullable<decimal> _Tipo_Orden;
		
		private string _Boleta;
		
		private string _Poliza;
		
		private System.Nullable<System.DateTime> _Fecha_Compra;
		
		private string _Lugar_Compra;
		
		private EntitySet<Detalle> _Detalles;
		
		private EntitySet<Historial_Modificacion_Orden> _Historial_Modificacion_Ordens;
		
		private EntityRef<Articulo> _Articulo;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Tecnico> _Tecnico;
		
		private EntityRef<Tipo_Orden> _Tipo_Orden1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnId_ClienteChanging(decimal value);
    partial void OnId_ClienteChanged();
    partial void OnId_ArticuloChanging(decimal value);
    partial void OnId_ArticuloChanged();
    partial void OnSerieChanging(string value);
    partial void OnSerieChanged();
    partial void OnFecha_IngresoChanging(System.DateTime value);
    partial void OnFecha_IngresoChanged();
    partial void OnFecha_EntregaChanging(System.DateTime value);
    partial void OnFecha_EntregaChanged();
    partial void OnFallaChanging(string value);
    partial void OnFallaChanged();
    partial void OnCondicion_ArticuloChanging(System.Nullable<decimal> value);
    partial void OnCondicion_ArticuloChanged();
    partial void OnId_Tecnico_AsignadoChanging(decimal value);
    partial void OnId_Tecnico_AsignadoChanged();
    partial void OnTipo_OrdenChanging(System.Nullable<decimal> value);
    partial void OnTipo_OrdenChanged();
    partial void OnBoletaChanging(string value);
    partial void OnBoletaChanged();
    partial void OnPolizaChanging(string value);
    partial void OnPolizaChanged();
    partial void OnFecha_CompraChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_CompraChanged();
    partial void OnLugar_CompraChanging(string value);
    partial void OnLugar_CompraChanged();
    #endregion
		
		public Orden_Trabajo()
		{
			this._Detalles = new EntitySet<Detalle>(new Action<Detalle>(this.attach_Detalles), new Action<Detalle>(this.detach_Detalles));
			this._Historial_Modificacion_Ordens = new EntitySet<Historial_Modificacion_Orden>(new Action<Historial_Modificacion_Orden>(this.attach_Historial_Modificacion_Ordens), new Action<Historial_Modificacion_Orden>(this.detach_Historial_Modificacion_Ordens));
			this._Articulo = default(EntityRef<Articulo>);
			this._Cliente = default(EntityRef<Cliente>);
			this._Tecnico = default(EntityRef<Tecnico>);
			this._Tipo_Orden1 = default(EntityRef<Tipo_Orden>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Id_Cliente", DbType="Decimal(10,0) NOT NULL")]
		public decimal Id_Cliente
		{
			get
			{
				return this._Id_Cliente;
			}
			set
			{
				if ((this._Id_Cliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ClienteChanging(value);
					this.SendPropertyChanging();
					this._Id_Cliente = value;
					this.SendPropertyChanged("Id_Cliente");
					this.OnId_ClienteChanged();
				}
			}
		}
		
		[Column(Storage="_Id_Articulo", DbType="Decimal(18,0) NOT NULL")]
		public decimal Id_Articulo
		{
			get
			{
				return this._Id_Articulo;
			}
			set
			{
				if ((this._Id_Articulo != value))
				{
					if (this._Articulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ArticuloChanging(value);
					this.SendPropertyChanging();
					this._Id_Articulo = value;
					this.SendPropertyChanged("Id_Articulo");
					this.OnId_ArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_Serie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Serie
		{
			get
			{
				return this._Serie;
			}
			set
			{
				if ((this._Serie != value))
				{
					this.OnSerieChanging(value);
					this.SendPropertyChanging();
					this._Serie = value;
					this.SendPropertyChanged("Serie");
					this.OnSerieChanged();
				}
			}
		}
		
		[Column(Storage="_Fecha_Ingreso", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha_Ingreso
		{
			get
			{
				return this._Fecha_Ingreso;
			}
			set
			{
				if ((this._Fecha_Ingreso != value))
				{
					this.OnFecha_IngresoChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Ingreso = value;
					this.SendPropertyChanged("Fecha_Ingreso");
					this.OnFecha_IngresoChanged();
				}
			}
		}
		
		[Column(Storage="_Fecha_Entrega", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha_Entrega
		{
			get
			{
				return this._Fecha_Entrega;
			}
			set
			{
				if ((this._Fecha_Entrega != value))
				{
					this.OnFecha_EntregaChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Entrega = value;
					this.SendPropertyChanged("Fecha_Entrega");
					this.OnFecha_EntregaChanged();
				}
			}
		}
		
		[Column(Storage="_Falla", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Falla
		{
			get
			{
				return this._Falla;
			}
			set
			{
				if ((this._Falla != value))
				{
					this.OnFallaChanging(value);
					this.SendPropertyChanging();
					this._Falla = value;
					this.SendPropertyChanged("Falla");
					this.OnFallaChanged();
				}
			}
		}
		
		[Column(Storage="_Condicion_Articulo", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Condicion_Articulo
		{
			get
			{
				return this._Condicion_Articulo;
			}
			set
			{
				if ((this._Condicion_Articulo != value))
				{
					this.OnCondicion_ArticuloChanging(value);
					this.SendPropertyChanging();
					this._Condicion_Articulo = value;
					this.SendPropertyChanged("Condicion_Articulo");
					this.OnCondicion_ArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_Id_Tecnico_Asignado", DbType="Decimal(10,0) NOT NULL")]
		public decimal Id_Tecnico_Asignado
		{
			get
			{
				return this._Id_Tecnico_Asignado;
			}
			set
			{
				if ((this._Id_Tecnico_Asignado != value))
				{
					if (this._Tecnico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Tecnico_AsignadoChanging(value);
					this.SendPropertyChanging();
					this._Id_Tecnico_Asignado = value;
					this.SendPropertyChanged("Id_Tecnico_Asignado");
					this.OnId_Tecnico_AsignadoChanged();
				}
			}
		}
		
		[Column(Storage="_Tipo_Orden", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Tipo_Orden
		{
			get
			{
				return this._Tipo_Orden;
			}
			set
			{
				if ((this._Tipo_Orden != value))
				{
					if (this._Tipo_Orden1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipo_OrdenChanging(value);
					this.SendPropertyChanging();
					this._Tipo_Orden = value;
					this.SendPropertyChanged("Tipo_Orden");
					this.OnTipo_OrdenChanged();
				}
			}
		}
		
		[Column(Storage="_Boleta", DbType="VarChar(50)")]
		public string Boleta
		{
			get
			{
				return this._Boleta;
			}
			set
			{
				if ((this._Boleta != value))
				{
					this.OnBoletaChanging(value);
					this.SendPropertyChanging();
					this._Boleta = value;
					this.SendPropertyChanged("Boleta");
					this.OnBoletaChanged();
				}
			}
		}
		
		[Column(Storage="_Poliza", DbType="VarChar(50)")]
		public string Poliza
		{
			get
			{
				return this._Poliza;
			}
			set
			{
				if ((this._Poliza != value))
				{
					this.OnPolizaChanging(value);
					this.SendPropertyChanging();
					this._Poliza = value;
					this.SendPropertyChanged("Poliza");
					this.OnPolizaChanged();
				}
			}
		}
		
		[Column(Storage="_Fecha_Compra", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha_Compra
		{
			get
			{
				return this._Fecha_Compra;
			}
			set
			{
				if ((this._Fecha_Compra != value))
				{
					this.OnFecha_CompraChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Compra = value;
					this.SendPropertyChanged("Fecha_Compra");
					this.OnFecha_CompraChanged();
				}
			}
		}
		
		[Column(Storage="_Lugar_Compra", DbType="VarChar(100)")]
		public string Lugar_Compra
		{
			get
			{
				return this._Lugar_Compra;
			}
			set
			{
				if ((this._Lugar_Compra != value))
				{
					this.OnLugar_CompraChanging(value);
					this.SendPropertyChanging();
					this._Lugar_Compra = value;
					this.SendPropertyChanged("Lugar_Compra");
					this.OnLugar_CompraChanged();
				}
			}
		}
		
		[Association(Name="Orden_Trabajo_Detalle", Storage="_Detalles", ThisKey="Id", OtherKey="Id_Orden")]
		public EntitySet<Detalle> Detalles
		{
			get
			{
				return this._Detalles;
			}
			set
			{
				this._Detalles.Assign(value);
			}
		}
		
		[Association(Name="Orden_Trabajo_Historial_Modificacion_Orden", Storage="_Historial_Modificacion_Ordens", ThisKey="Id", OtherKey="Id_Orden")]
		public EntitySet<Historial_Modificacion_Orden> Historial_Modificacion_Ordens
		{
			get
			{
				return this._Historial_Modificacion_Ordens;
			}
			set
			{
				this._Historial_Modificacion_Ordens.Assign(value);
			}
		}
		
		[Association(Name="Articulo_Orden_Trabajo", Storage="_Articulo", ThisKey="Id_Articulo", OtherKey="Id", IsForeignKey=true)]
		public Articulo Articulo
		{
			get
			{
				return this._Articulo.Entity;
			}
			set
			{
				Articulo previousValue = this._Articulo.Entity;
				if (((previousValue != value) 
							|| (this._Articulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articulo.Entity = null;
						previousValue.Orden_Trabajos.Remove(this);
					}
					this._Articulo.Entity = value;
					if ((value != null))
					{
						value.Orden_Trabajos.Add(this);
						this._Id_Articulo = value.Id;
					}
					else
					{
						this._Id_Articulo = default(decimal);
					}
					this.SendPropertyChanged("Articulo");
				}
			}
		}
		
		[Association(Name="Cliente_Orden_Trabajo", Storage="_Cliente", ThisKey="Id_Cliente", OtherKey="Rut", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Orden_Trabajos.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Orden_Trabajos.Add(this);
						this._Id_Cliente = value.Rut;
					}
					else
					{
						this._Id_Cliente = default(decimal);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[Association(Name="Tecnico_Orden_Trabajo", Storage="_Tecnico", ThisKey="Id_Tecnico_Asignado", OtherKey="Rut", IsForeignKey=true)]
		public Tecnico Tecnico
		{
			get
			{
				return this._Tecnico.Entity;
			}
			set
			{
				Tecnico previousValue = this._Tecnico.Entity;
				if (((previousValue != value) 
							|| (this._Tecnico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tecnico.Entity = null;
						previousValue.Orden_Trabajos.Remove(this);
					}
					this._Tecnico.Entity = value;
					if ((value != null))
					{
						value.Orden_Trabajos.Add(this);
						this._Id_Tecnico_Asignado = value.Rut;
					}
					else
					{
						this._Id_Tecnico_Asignado = default(decimal);
					}
					this.SendPropertyChanged("Tecnico");
				}
			}
		}
		
		[Association(Name="Tipo_Orden_Orden_Trabajo", Storage="_Tipo_Orden1", ThisKey="Tipo_Orden", OtherKey="Id_Tipo_Orden", IsForeignKey=true)]
		public Tipo_Orden Tipo_Orden1
		{
			get
			{
				return this._Tipo_Orden1.Entity;
			}
			set
			{
				Tipo_Orden previousValue = this._Tipo_Orden1.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Orden1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Orden1.Entity = null;
						previousValue.Orden_Trabajos.Remove(this);
					}
					this._Tipo_Orden1.Entity = value;
					if ((value != null))
					{
						value.Orden_Trabajos.Add(this);
						this._Tipo_Orden = value.Id_Tipo_Orden;
					}
					else
					{
						this._Tipo_Orden = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Tipo_Orden1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalles(Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Orden_Trabajo = this;
		}
		
		private void detach_Detalles(Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Orden_Trabajo = null;
		}
		
		private void attach_Historial_Modificacion_Ordens(Historial_Modificacion_Orden entity)
		{
			this.SendPropertyChanging();
			entity.Orden_Trabajo = this;
		}
		
		private void detach_Historial_Modificacion_Ordens(Historial_Modificacion_Orden entity)
		{
			this.SendPropertyChanging();
			entity.Orden_Trabajo = null;
		}
	}
	
	[Table(Name="dbo.Porcentaje")]
	public partial class Porcentaje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private decimal _Id_Precio;
		
		private decimal _Porcentaje1;
		
		private EntityRef<Precio_Garantia> _Precio_Garantia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnId_PrecioChanging(decimal value);
    partial void OnId_PrecioChanged();
    partial void OnPorcentaje1Changing(decimal value);
    partial void OnPorcentaje1Changed();
    #endregion
		
		public Porcentaje()
		{
			this._Precio_Garantia = default(EntityRef<Precio_Garantia>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Id_Precio", DbType="Decimal(18,0) NOT NULL")]
		public decimal Id_Precio
		{
			get
			{
				return this._Id_Precio;
			}
			set
			{
				if ((this._Id_Precio != value))
				{
					if (this._Precio_Garantia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PrecioChanging(value);
					this.SendPropertyChanging();
					this._Id_Precio = value;
					this.SendPropertyChanged("Id_Precio");
					this.OnId_PrecioChanged();
				}
			}
		}
		
		[Column(Name="Porcentaje", Storage="_Porcentaje1", DbType="Decimal(18,0) NOT NULL")]
		public decimal Porcentaje1
		{
			get
			{
				return this._Porcentaje1;
			}
			set
			{
				if ((this._Porcentaje1 != value))
				{
					this.OnPorcentaje1Changing(value);
					this.SendPropertyChanging();
					this._Porcentaje1 = value;
					this.SendPropertyChanged("Porcentaje1");
					this.OnPorcentaje1Changed();
				}
			}
		}
		
		[Association(Name="Precio_Garantia_Porcentaje", Storage="_Precio_Garantia", ThisKey="Id_Precio", OtherKey="Id_Precio_Garantia", IsForeignKey=true)]
		public Precio_Garantia Precio_Garantia
		{
			get
			{
				return this._Precio_Garantia.Entity;
			}
			set
			{
				Precio_Garantia previousValue = this._Precio_Garantia.Entity;
				if (((previousValue != value) 
							|| (this._Precio_Garantia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Precio_Garantia.Entity = null;
						previousValue.Porcentajes.Remove(this);
					}
					this._Precio_Garantia.Entity = value;
					if ((value != null))
					{
						value.Porcentajes.Add(this);
						this._Id_Precio = value.Id_Precio_Garantia;
					}
					else
					{
						this._Id_Precio = default(decimal);
					}
					this.SendPropertyChanged("Precio_Garantia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Precio_Garantia")]
	public partial class Precio_Garantia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Precio_Garantia;
		
		private decimal _Valor_Revision;
		
		private decimal _Valor_Reparacion;
		
		private EntitySet<Articulo> _Articulos;
		
		private EntitySet<Porcentaje> _Porcentajes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Precio_GarantiaChanging(decimal value);
    partial void OnId_Precio_GarantiaChanged();
    partial void OnValor_RevisionChanging(decimal value);
    partial void OnValor_RevisionChanged();
    partial void OnValor_ReparacionChanging(decimal value);
    partial void OnValor_ReparacionChanged();
    #endregion
		
		public Precio_Garantia()
		{
			this._Articulos = new EntitySet<Articulo>(new Action<Articulo>(this.attach_Articulos), new Action<Articulo>(this.detach_Articulos));
			this._Porcentajes = new EntitySet<Porcentaje>(new Action<Porcentaje>(this.attach_Porcentajes), new Action<Porcentaje>(this.detach_Porcentajes));
			OnCreated();
		}
		
		[Column(Storage="_Id_Precio_Garantia", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Precio_Garantia
		{
			get
			{
				return this._Id_Precio_Garantia;
			}
			set
			{
				if ((this._Id_Precio_Garantia != value))
				{
					this.OnId_Precio_GarantiaChanging(value);
					this.SendPropertyChanging();
					this._Id_Precio_Garantia = value;
					this.SendPropertyChanged("Id_Precio_Garantia");
					this.OnId_Precio_GarantiaChanged();
				}
			}
		}
		
		[Column(Storage="_Valor_Revision", DbType="Decimal(18,0) NOT NULL")]
		public decimal Valor_Revision
		{
			get
			{
				return this._Valor_Revision;
			}
			set
			{
				if ((this._Valor_Revision != value))
				{
					this.OnValor_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Valor_Revision = value;
					this.SendPropertyChanged("Valor_Revision");
					this.OnValor_RevisionChanged();
				}
			}
		}
		
		[Column(Storage="_Valor_Reparacion", DbType="Decimal(18,0) NOT NULL")]
		public decimal Valor_Reparacion
		{
			get
			{
				return this._Valor_Reparacion;
			}
			set
			{
				if ((this._Valor_Reparacion != value))
				{
					this.OnValor_ReparacionChanging(value);
					this.SendPropertyChanging();
					this._Valor_Reparacion = value;
					this.SendPropertyChanged("Valor_Reparacion");
					this.OnValor_ReparacionChanged();
				}
			}
		}
		
		[Association(Name="Precio_Garantia_Articulo", Storage="_Articulos", ThisKey="Id_Precio_Garantia", OtherKey="Precio_Garantia")]
		public EntitySet<Articulo> Articulos
		{
			get
			{
				return this._Articulos;
			}
			set
			{
				this._Articulos.Assign(value);
			}
		}
		
		[Association(Name="Precio_Garantia_Porcentaje", Storage="_Porcentajes", ThisKey="Id_Precio_Garantia", OtherKey="Id_Precio")]
		public EntitySet<Porcentaje> Porcentajes
		{
			get
			{
				return this._Porcentajes;
			}
			set
			{
				this._Porcentajes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Precio_Garantia1 = this;
		}
		
		private void detach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Precio_Garantia1 = null;
		}
		
		private void attach_Porcentajes(Porcentaje entity)
		{
			this.SendPropertyChanging();
			entity.Precio_Garantia = this;
		}
		
		private void detach_Porcentajes(Porcentaje entity)
		{
			this.SendPropertyChanging();
			entity.Precio_Garantia = null;
		}
	}
	
	[Table(Name="dbo.Tecnicos")]
	public partial class Tecnico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Rut;
		
		private decimal _Nivel;
		
		private EntitySet<Especialidade> _Especialidades;
		
		private EntitySet<Orden_Trabajo> _Orden_Trabajos;
		
		private EntityRef<Empleado> _Empleado;
		
		private EntityRef<Nivel> _Nivel1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRutChanging(decimal value);
    partial void OnRutChanged();
    partial void OnNivelChanging(decimal value);
    partial void OnNivelChanged();
    #endregion
		
		public Tecnico()
		{
			this._Especialidades = new EntitySet<Especialidade>(new Action<Especialidade>(this.attach_Especialidades), new Action<Especialidade>(this.detach_Especialidades));
			this._Orden_Trabajos = new EntitySet<Orden_Trabajo>(new Action<Orden_Trabajo>(this.attach_Orden_Trabajos), new Action<Orden_Trabajo>(this.detach_Orden_Trabajos));
			this._Empleado = default(EntityRef<Empleado>);
			this._Nivel1 = default(EntityRef<Nivel>);
			OnCreated();
		}
		
		[Column(Storage="_Rut", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Rut
		{
			get
			{
				return this._Rut;
			}
			set
			{
				if ((this._Rut != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRutChanging(value);
					this.SendPropertyChanging();
					this._Rut = value;
					this.SendPropertyChanged("Rut");
					this.OnRutChanged();
				}
			}
		}
		
		[Column(Storage="_Nivel", DbType="Decimal(18,0) NOT NULL")]
		public decimal Nivel
		{
			get
			{
				return this._Nivel;
			}
			set
			{
				if ((this._Nivel != value))
				{
					if (this._Nivel1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNivelChanging(value);
					this.SendPropertyChanging();
					this._Nivel = value;
					this.SendPropertyChanged("Nivel");
					this.OnNivelChanged();
				}
			}
		}
		
		[Association(Name="Tecnico_Especialidade", Storage="_Especialidades", ThisKey="Rut", OtherKey="Id_Tecnico")]
		public EntitySet<Especialidade> Especialidades
		{
			get
			{
				return this._Especialidades;
			}
			set
			{
				this._Especialidades.Assign(value);
			}
		}
		
		[Association(Name="Tecnico_Orden_Trabajo", Storage="_Orden_Trabajos", ThisKey="Rut", OtherKey="Id_Tecnico_Asignado")]
		public EntitySet<Orden_Trabajo> Orden_Trabajos
		{
			get
			{
				return this._Orden_Trabajos;
			}
			set
			{
				this._Orden_Trabajos.Assign(value);
			}
		}
		
		[Association(Name="Empleado_Tecnico", Storage="_Empleado", ThisKey="Rut", OtherKey="Rut", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Tecnico = null;
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Tecnico = this;
						this._Rut = value.Rut;
					}
					else
					{
						this._Rut = default(decimal);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		[Association(Name="Nivel_Tecnico", Storage="_Nivel1", ThisKey="Nivel", OtherKey="Id_Nivel", IsForeignKey=true)]
		public Nivel Nivel1
		{
			get
			{
				return this._Nivel1.Entity;
			}
			set
			{
				Nivel previousValue = this._Nivel1.Entity;
				if (((previousValue != value) 
							|| (this._Nivel1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nivel1.Entity = null;
						previousValue.Tecnicos.Remove(this);
					}
					this._Nivel1.Entity = value;
					if ((value != null))
					{
						value.Tecnicos.Add(this);
						this._Nivel = value.Id_Nivel;
					}
					else
					{
						this._Nivel = default(decimal);
					}
					this.SendPropertyChanged("Nivel1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Especialidades(Especialidade entity)
		{
			this.SendPropertyChanging();
			entity.Tecnico = this;
		}
		
		private void detach_Especialidades(Especialidade entity)
		{
			this.SendPropertyChanging();
			entity.Tecnico = null;
		}
		
		private void attach_Orden_Trabajos(Orden_Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Tecnico = this;
		}
		
		private void detach_Orden_Trabajos(Orden_Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Tecnico = null;
		}
	}
	
	[Table(Name="dbo.Tipo_Articulo")]
	public partial class Tipo_Articulo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Tipo_Articulo;
		
		private string _Descripcion;
		
		private EntitySet<Articulo> _Articulos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Tipo_ArticuloChanging(decimal value);
    partial void OnId_Tipo_ArticuloChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Tipo_Articulo()
		{
			this._Articulos = new EntitySet<Articulo>(new Action<Articulo>(this.attach_Articulos), new Action<Articulo>(this.detach_Articulos));
			OnCreated();
		}
		
		[Column(Storage="_Id_Tipo_Articulo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Tipo_Articulo
		{
			get
			{
				return this._Id_Tipo_Articulo;
			}
			set
			{
				if ((this._Id_Tipo_Articulo != value))
				{
					this.OnId_Tipo_ArticuloChanging(value);
					this.SendPropertyChanging();
					this._Id_Tipo_Articulo = value;
					this.SendPropertyChanged("Id_Tipo_Articulo");
					this.OnId_Tipo_ArticuloChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Tipo_Articulo_Articulo", Storage="_Articulos", ThisKey="Id_Tipo_Articulo", OtherKey="Tipo_Articulo")]
		public EntitySet<Articulo> Articulos
		{
			get
			{
				return this._Articulos;
			}
			set
			{
				this._Articulos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Articulo1 = this;
		}
		
		private void detach_Articulos(Articulo entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Articulo1 = null;
		}
	}
	
	[Table(Name="dbo.Tipo_Cargo")]
	public partial class Tipo_Cargo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Tipo_Cargo;
		
		private string _Descripcion;
		
		private EntitySet<Empleado> _Empleados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Tipo_CargoChanging(decimal value);
    partial void OnId_Tipo_CargoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Tipo_Cargo()
		{
			this._Empleados = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleados), new Action<Empleado>(this.detach_Empleados));
			OnCreated();
		}
		
		[Column(Storage="_Id_Tipo_Cargo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Tipo_Cargo
		{
			get
			{
				return this._Id_Tipo_Cargo;
			}
			set
			{
				if ((this._Id_Tipo_Cargo != value))
				{
					this.OnId_Tipo_CargoChanging(value);
					this.SendPropertyChanging();
					this._Id_Tipo_Cargo = value;
					this.SendPropertyChanged("Id_Tipo_Cargo");
					this.OnId_Tipo_CargoChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Tipo_Cargo_Empleado", Storage="_Empleados", ThisKey="Id_Tipo_Cargo", OtherKey="Tipo_Cargo")]
		public EntitySet<Empleado> Empleados
		{
			get
			{
				return this._Empleados;
			}
			set
			{
				this._Empleados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleados(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Cargo1 = this;
		}
		
		private void detach_Empleados(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Cargo1 = null;
		}
	}
	
	[Table(Name="dbo.Tipo_Contacto")]
	public partial class Tipo_Contacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Tipo_Contacto;
		
		private string _Descripcion;
		
		private EntitySet<Contacto> _Contactos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Tipo_ContactoChanging(decimal value);
    partial void OnId_Tipo_ContactoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Tipo_Contacto()
		{
			this._Contactos = new EntitySet<Contacto>(new Action<Contacto>(this.attach_Contactos), new Action<Contacto>(this.detach_Contactos));
			OnCreated();
		}
		
		[Column(Storage="_Id_Tipo_Contacto", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Tipo_Contacto
		{
			get
			{
				return this._Id_Tipo_Contacto;
			}
			set
			{
				if ((this._Id_Tipo_Contacto != value))
				{
					this.OnId_Tipo_ContactoChanging(value);
					this.SendPropertyChanging();
					this._Id_Tipo_Contacto = value;
					this.SendPropertyChanged("Id_Tipo_Contacto");
					this.OnId_Tipo_ContactoChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Tipo_Contacto_Contacto", Storage="_Contactos", ThisKey="Id_Tipo_Contacto", OtherKey="Tipo_Contacto")]
		public EntitySet<Contacto> Contactos
		{
			get
			{
				return this._Contactos;
			}
			set
			{
				this._Contactos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Contacto1 = this;
		}
		
		private void detach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Contacto1 = null;
		}
	}
	
	[Table(Name="dbo.Tipo_Direccion")]
	public partial class Tipo_Direccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Tipo_Direccion;
		
		private string _Descripcion;
		
		private EntitySet<Direccion> _Direccions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Tipo_DireccionChanging(decimal value);
    partial void OnId_Tipo_DireccionChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Tipo_Direccion()
		{
			this._Direccions = new EntitySet<Direccion>(new Action<Direccion>(this.attach_Direccions), new Action<Direccion>(this.detach_Direccions));
			OnCreated();
		}
		
		[Column(Storage="_Id_Tipo_Direccion", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Tipo_Direccion
		{
			get
			{
				return this._Id_Tipo_Direccion;
			}
			set
			{
				if ((this._Id_Tipo_Direccion != value))
				{
					this.OnId_Tipo_DireccionChanging(value);
					this.SendPropertyChanging();
					this._Id_Tipo_Direccion = value;
					this.SendPropertyChanged("Id_Tipo_Direccion");
					this.OnId_Tipo_DireccionChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Tipo_Direccion_Direccion", Storage="_Direccions", ThisKey="Id_Tipo_Direccion", OtherKey="Tipo_Direccion")]
		public EntitySet<Direccion> Direccions
		{
			get
			{
				return this._Direccions;
			}
			set
			{
				this._Direccions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Direccions(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Direccion1 = this;
		}
		
		private void detach_Direccions(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Direccion1 = null;
		}
	}
	
	[Table(Name="dbo.Tipo_Especialidad")]
	public partial class Tipo_Especialidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Tipo_Especialidad;
		
		private string _Descripcion;
		
		private EntitySet<Especialidade> _Especialidades;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Tipo_EspecialidadChanging(decimal value);
    partial void OnId_Tipo_EspecialidadChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Tipo_Especialidad()
		{
			this._Especialidades = new EntitySet<Especialidade>(new Action<Especialidade>(this.attach_Especialidades), new Action<Especialidade>(this.detach_Especialidades));
			OnCreated();
		}
		
		[Column(Storage="_Id_Tipo_Especialidad", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Tipo_Especialidad
		{
			get
			{
				return this._Id_Tipo_Especialidad;
			}
			set
			{
				if ((this._Id_Tipo_Especialidad != value))
				{
					this.OnId_Tipo_EspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Id_Tipo_Especialidad = value;
					this.SendPropertyChanged("Id_Tipo_Especialidad");
					this.OnId_Tipo_EspecialidadChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Tipo_Especialidad_Especialidade", Storage="_Especialidades", ThisKey="Id_Tipo_Especialidad", OtherKey="Tipo_Especialidad")]
		public EntitySet<Especialidade> Especialidades
		{
			get
			{
				return this._Especialidades;
			}
			set
			{
				this._Especialidades.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Especialidades(Especialidade entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Especialidad1 = this;
		}
		
		private void detach_Especialidades(Especialidade entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Especialidad1 = null;
		}
	}
	
	[Table(Name="dbo.Tipo_Orden")]
	public partial class Tipo_Orden : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Tipo_Orden;
		
		private string _Descripcion;
		
		private EntitySet<Orden_Trabajo> _Orden_Trabajos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Tipo_OrdenChanging(decimal value);
    partial void OnId_Tipo_OrdenChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Tipo_Orden()
		{
			this._Orden_Trabajos = new EntitySet<Orden_Trabajo>(new Action<Orden_Trabajo>(this.attach_Orden_Trabajos), new Action<Orden_Trabajo>(this.detach_Orden_Trabajos));
			OnCreated();
		}
		
		[Column(Storage="_Id_Tipo_Orden", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Tipo_Orden
		{
			get
			{
				return this._Id_Tipo_Orden;
			}
			set
			{
				if ((this._Id_Tipo_Orden != value))
				{
					this.OnId_Tipo_OrdenChanging(value);
					this.SendPropertyChanging();
					this._Id_Tipo_Orden = value;
					this.SendPropertyChanged("Id_Tipo_Orden");
					this.OnId_Tipo_OrdenChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Tipo_Orden_Orden_Trabajo", Storage="_Orden_Trabajos", ThisKey="Id_Tipo_Orden", OtherKey="Tipo_Orden")]
		public EntitySet<Orden_Trabajo> Orden_Trabajos
		{
			get
			{
				return this._Orden_Trabajos;
			}
			set
			{
				this._Orden_Trabajos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orden_Trabajos(Orden_Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Orden1 = this;
		}
		
		private void detach_Orden_Trabajos(Orden_Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Orden1 = null;
		}
	}
	
	[Table(Name="dbo.Tipo_Usuario")]
	public partial class Tipo_Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id_Tipo_Usuario;
		
		private string _Descripcion;
		
		private EntitySet<Usuario> _Usuarios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Tipo_UsuarioChanging(decimal value);
    partial void OnId_Tipo_UsuarioChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Tipo_Usuario()
		{
			this._Usuarios = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuarios), new Action<Usuario>(this.detach_Usuarios));
			OnCreated();
		}
		
		[Column(Storage="_Id_Tipo_Usuario", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id_Tipo_Usuario
		{
			get
			{
				return this._Id_Tipo_Usuario;
			}
			set
			{
				if ((this._Id_Tipo_Usuario != value))
				{
					this.OnId_Tipo_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._Id_Tipo_Usuario = value;
					this.SendPropertyChanged("Id_Tipo_Usuario");
					this.OnId_Tipo_UsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Tipo_Usuario_Usuario", Storage="_Usuarios", ThisKey="Id_Tipo_Usuario", OtherKey="Tipo_Usuario")]
		public EntitySet<Usuario> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Usuario1 = this;
		}
		
		private void detach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Usuario1 = null;
		}
	}
	
	[Table(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Usuario1;
		
		private string _Contraseña;
		
		private decimal _Tipo_Usuario;
		
		private decimal _Empleado;
		
		private EntitySet<Detalle> _Detalles;
		
		private EntityRef<Empleado> _Empleado1;
		
		private EntityRef<Tipo_Usuario> _Tipo_Usuario1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    partial void OnTipo_UsuarioChanging(decimal value);
    partial void OnTipo_UsuarioChanged();
    partial void OnEmpleadoChanging(decimal value);
    partial void OnEmpleadoChanged();
    #endregion
		
		public Usuario()
		{
			this._Detalles = new EntitySet<Detalle>(new Action<Detalle>(this.attach_Detalles), new Action<Detalle>(this.detach_Detalles));
			this._Empleado1 = default(EntityRef<Empleado>);
			this._Tipo_Usuario1 = default(EntityRef<Tipo_Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="Usuario", Storage="_Usuario1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[Column(Storage="_Contraseña", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[Column(Storage="_Tipo_Usuario", DbType="Decimal(18,0) NOT NULL")]
		public decimal Tipo_Usuario
		{
			get
			{
				return this._Tipo_Usuario;
			}
			set
			{
				if ((this._Tipo_Usuario != value))
				{
					if (this._Tipo_Usuario1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipo_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._Tipo_Usuario = value;
					this.SendPropertyChanged("Tipo_Usuario");
					this.OnTipo_UsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_Empleado", DbType="Decimal(10,0) NOT NULL")]
		public decimal Empleado
		{
			get
			{
				return this._Empleado;
			}
			set
			{
				if ((this._Empleado != value))
				{
					if (this._Empleado1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._Empleado = value;
					this.SendPropertyChanged("Empleado");
					this.OnEmpleadoChanged();
				}
			}
		}
		
		[Association(Name="Usuario_Detalle", Storage="_Detalles", ThisKey="Id", OtherKey="Id_Usuario")]
		public EntitySet<Detalle> Detalles
		{
			get
			{
				return this._Detalles;
			}
			set
			{
				this._Detalles.Assign(value);
			}
		}
		
		[Association(Name="Empleado_Usuario", Storage="_Empleado1", ThisKey="Empleado", OtherKey="Rut", IsForeignKey=true)]
		public Empleado Empleado1
		{
			get
			{
				return this._Empleado1.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado1.Entity;
				if (((previousValue != value) 
							|| (this._Empleado1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado1.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Empleado1.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._Empleado = value.Rut;
					}
					else
					{
						this._Empleado = default(decimal);
					}
					this.SendPropertyChanged("Empleado1");
				}
			}
		}
		
		[Association(Name="Tipo_Usuario_Usuario", Storage="_Tipo_Usuario1", ThisKey="Tipo_Usuario", OtherKey="Id_Tipo_Usuario", IsForeignKey=true)]
		public Tipo_Usuario Tipo_Usuario1
		{
			get
			{
				return this._Tipo_Usuario1.Entity;
			}
			set
			{
				Tipo_Usuario previousValue = this._Tipo_Usuario1.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Usuario1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Usuario1.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Tipo_Usuario1.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._Tipo_Usuario = value.Id_Tipo_Usuario;
					}
					else
					{
						this._Tipo_Usuario = default(decimal);
					}
					this.SendPropertyChanged("Tipo_Usuario1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalles(Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Detalles(Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[Table(Name="dbo.Direccion")]
	public partial class Direccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private decimal _Rut;
		
		private decimal _Region;
		
		private decimal _Provincia;
		
		private decimal _Comuna;
		
		private string _Calle;
		
		private string _Numero;
		
		private decimal _Tipo_Direccion;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Tipo_Direccion> _Tipo_Direccion1;
		
		private EntityRef<Comuna> _Comuna1;
		
		private EntityRef<Region> _Region1;
		
		private EntityRef<Provincia> _Provincia1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnRutChanging(decimal value);
    partial void OnRutChanged();
    partial void OnRegionChanging(decimal value);
    partial void OnRegionChanged();
    partial void OnProvinciaChanging(decimal value);
    partial void OnProvinciaChanged();
    partial void OnComunaChanging(decimal value);
    partial void OnComunaChanged();
    partial void OnCalleChanging(string value);
    partial void OnCalleChanged();
    partial void OnNumeroChanging(string value);
    partial void OnNumeroChanged();
    partial void OnTipo_DireccionChanging(decimal value);
    partial void OnTipo_DireccionChanged();
    #endregion
		
		public Direccion()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Tipo_Direccion1 = default(EntityRef<Tipo_Direccion>);
			this._Comuna1 = default(EntityRef<Comuna>);
			this._Region1 = default(EntityRef<Region>);
			this._Provincia1 = default(EntityRef<Provincia>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Rut", DbType="Decimal(10,0) NOT NULL")]
		public decimal Rut
		{
			get
			{
				return this._Rut;
			}
			set
			{
				if ((this._Rut != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRutChanging(value);
					this.SendPropertyChanging();
					this._Rut = value;
					this.SendPropertyChanged("Rut");
					this.OnRutChanged();
				}
			}
		}
		
		[Column(Storage="_Region", DbType="Decimal(2,0) NOT NULL")]
		public decimal Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					if (this._Region1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[Column(Storage="_Provincia", DbType="Decimal(3,0) NOT NULL")]
		public decimal Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					if (this._Provincia1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[Column(Storage="_Comuna", DbType="Decimal(3,0) NOT NULL")]
		public decimal Comuna
		{
			get
			{
				return this._Comuna;
			}
			set
			{
				if ((this._Comuna != value))
				{
					if (this._Comuna1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComunaChanging(value);
					this.SendPropertyChanging();
					this._Comuna = value;
					this.SendPropertyChanged("Comuna");
					this.OnComunaChanged();
				}
			}
		}
		
		[Column(Storage="_Calle", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Calle
		{
			get
			{
				return this._Calle;
			}
			set
			{
				if ((this._Calle != value))
				{
					this.OnCalleChanging(value);
					this.SendPropertyChanging();
					this._Calle = value;
					this.SendPropertyChanged("Calle");
					this.OnCalleChanged();
				}
			}
		}
		
		[Column(Storage="_Numero", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[Column(Storage="_Tipo_Direccion", DbType="Decimal(18,0) NOT NULL")]
		public decimal Tipo_Direccion
		{
			get
			{
				return this._Tipo_Direccion;
			}
			set
			{
				if ((this._Tipo_Direccion != value))
				{
					if (this._Tipo_Direccion1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipo_DireccionChanging(value);
					this.SendPropertyChanging();
					this._Tipo_Direccion = value;
					this.SendPropertyChanged("Tipo_Direccion");
					this.OnTipo_DireccionChanged();
				}
			}
		}
		
		[Association(Name="Cliente_Direccion", Storage="_Cliente", ThisKey="Rut", OtherKey="Rut", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Direccions.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Direccions.Add(this);
						this._Rut = value.Rut;
					}
					else
					{
						this._Rut = default(decimal);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[Association(Name="Tipo_Direccion_Direccion", Storage="_Tipo_Direccion1", ThisKey="Tipo_Direccion", OtherKey="Id_Tipo_Direccion", IsForeignKey=true)]
		public Tipo_Direccion Tipo_Direccion1
		{
			get
			{
				return this._Tipo_Direccion1.Entity;
			}
			set
			{
				Tipo_Direccion previousValue = this._Tipo_Direccion1.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Direccion1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Direccion1.Entity = null;
						previousValue.Direccions.Remove(this);
					}
					this._Tipo_Direccion1.Entity = value;
					if ((value != null))
					{
						value.Direccions.Add(this);
						this._Tipo_Direccion = value.Id_Tipo_Direccion;
					}
					else
					{
						this._Tipo_Direccion = default(decimal);
					}
					this.SendPropertyChanged("Tipo_Direccion1");
				}
			}
		}
		
		[Association(Name="Comuna_Direccion", Storage="_Comuna1", ThisKey="Comuna", OtherKey="Id", IsForeignKey=true)]
		public Comuna Comuna1
		{
			get
			{
				return this._Comuna1.Entity;
			}
			set
			{
				Comuna previousValue = this._Comuna1.Entity;
				if (((previousValue != value) 
							|| (this._Comuna1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comuna1.Entity = null;
						previousValue.Direccions.Remove(this);
					}
					this._Comuna1.Entity = value;
					if ((value != null))
					{
						value.Direccions.Add(this);
						this._Comuna = value.Id;
					}
					else
					{
						this._Comuna = default(decimal);
					}
					this.SendPropertyChanged("Comuna1");
				}
			}
		}
		
		[Association(Name="Region_Direccion", Storage="_Region1", ThisKey="Region", OtherKey="Id", IsForeignKey=true)]
		public Region Region1
		{
			get
			{
				return this._Region1.Entity;
			}
			set
			{
				Region previousValue = this._Region1.Entity;
				if (((previousValue != value) 
							|| (this._Region1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region1.Entity = null;
						previousValue.Direccions.Remove(this);
					}
					this._Region1.Entity = value;
					if ((value != null))
					{
						value.Direccions.Add(this);
						this._Region = value.Id;
					}
					else
					{
						this._Region = default(decimal);
					}
					this.SendPropertyChanged("Region1");
				}
			}
		}
		
		[Association(Name="Provincia_Direccion", Storage="_Provincia1", ThisKey="Provincia", OtherKey="Id", IsForeignKey=true)]
		public Provincia Provincia1
		{
			get
			{
				return this._Provincia1.Entity;
			}
			set
			{
				Provincia previousValue = this._Provincia1.Entity;
				if (((previousValue != value) 
							|| (this._Provincia1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincia1.Entity = null;
						previousValue.Direccions.Remove(this);
					}
					this._Provincia1.Entity = value;
					if ((value != null))
					{
						value.Direccions.Add(this);
						this._Provincia = value.Id;
					}
					else
					{
						this._Provincia = default(decimal);
					}
					this.SendPropertyChanged("Provincia1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Comuna")]
	public partial class Comuna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private decimal _Id_Provincia;
		
		private string _Nombre;
		
		private EntitySet<Direccion> _Direccions;
		
		private EntityRef<Provincia> _Provincia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnId_ProvinciaChanging(decimal value);
    partial void OnId_ProvinciaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Comuna()
		{
			this._Direccions = new EntitySet<Direccion>(new Action<Direccion>(this.attach_Direccions), new Action<Direccion>(this.detach_Direccions));
			this._Provincia = default(EntityRef<Provincia>);
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Id_Provincia", DbType="Decimal(3,0) NOT NULL")]
		public decimal Id_Provincia
		{
			get
			{
				return this._Id_Provincia;
			}
			set
			{
				if ((this._Id_Provincia != value))
				{
					if (this._Provincia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Id_Provincia = value;
					this.SendPropertyChanged("Id_Provincia");
					this.OnId_ProvinciaChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Association(Name="Comuna_Direccion", Storage="_Direccions", ThisKey="Id", OtherKey="Comuna")]
		public EntitySet<Direccion> Direccions
		{
			get
			{
				return this._Direccions;
			}
			set
			{
				this._Direccions.Assign(value);
			}
		}
		
		[Association(Name="Provincia_Comuna", Storage="_Provincia", ThisKey="Id_Provincia", OtherKey="Id", IsForeignKey=true)]
		public Provincia Provincia
		{
			get
			{
				return this._Provincia.Entity;
			}
			set
			{
				Provincia previousValue = this._Provincia.Entity;
				if (((previousValue != value) 
							|| (this._Provincia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincia.Entity = null;
						previousValue.Comunas.Remove(this);
					}
					this._Provincia.Entity = value;
					if ((value != null))
					{
						value.Comunas.Add(this);
						this._Id_Provincia = value.Id;
					}
					else
					{
						this._Id_Provincia = default(decimal);
					}
					this.SendPropertyChanged("Provincia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Direccions(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Comuna1 = this;
		}
		
		private void detach_Direccions(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Comuna1 = null;
		}
	}
	
	[Table(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Nombre;
		
		private EntitySet<Direccion> _Direccions;
		
		private EntitySet<Provincia> _Provincias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Region()
		{
			this._Direccions = new EntitySet<Direccion>(new Action<Direccion>(this.attach_Direccions), new Action<Direccion>(this.detach_Direccions));
			this._Provincias = new EntitySet<Provincia>(new Action<Provincia>(this.attach_Provincias), new Action<Provincia>(this.detach_Provincias));
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Association(Name="Region_Direccion", Storage="_Direccions", ThisKey="Id", OtherKey="Region")]
		public EntitySet<Direccion> Direccions
		{
			get
			{
				return this._Direccions;
			}
			set
			{
				this._Direccions.Assign(value);
			}
		}
		
		[Association(Name="Region_Provincia", Storage="_Provincias", ThisKey="Id", OtherKey="Id_Region")]
		public EntitySet<Provincia> Provincias
		{
			get
			{
				return this._Provincias;
			}
			set
			{
				this._Provincias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Direccions(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Region1 = this;
		}
		
		private void detach_Direccions(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Region1 = null;
		}
		
		private void attach_Provincias(Provincia entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_Provincias(Provincia entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
	}
	
	[Table(Name="dbo.Provincia")]
	public partial class Provincia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private decimal _Id_Region;
		
		private string _nombre;
		
		private EntitySet<Direccion> _Direccions;
		
		private EntitySet<Comuna> _Comunas;
		
		private EntityRef<Region> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnId_RegionChanging(decimal value);
    partial void OnId_RegionChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Provincia()
		{
			this._Direccions = new EntitySet<Direccion>(new Action<Direccion>(this.attach_Direccions), new Action<Direccion>(this.detach_Direccions));
			this._Comunas = new EntitySet<Comuna>(new Action<Comuna>(this.attach_Comunas), new Action<Comuna>(this.detach_Comunas));
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Id_Region", DbType="Decimal(2,0) NOT NULL")]
		public decimal Id_Region
		{
			get
			{
				return this._Id_Region;
			}
			set
			{
				if ((this._Id_Region != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_RegionChanging(value);
					this.SendPropertyChanging();
					this._Id_Region = value;
					this.SendPropertyChanged("Id_Region");
					this.OnId_RegionChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Association(Name="Provincia_Direccion", Storage="_Direccions", ThisKey="Id", OtherKey="Provincia")]
		public EntitySet<Direccion> Direccions
		{
			get
			{
				return this._Direccions;
			}
			set
			{
				this._Direccions.Assign(value);
			}
		}
		
		[Association(Name="Provincia_Comuna", Storage="_Comunas", ThisKey="Id", OtherKey="Id_Provincia")]
		public EntitySet<Comuna> Comunas
		{
			get
			{
				return this._Comunas;
			}
			set
			{
				this._Comunas.Assign(value);
			}
		}
		
		[Association(Name="Region_Provincia", Storage="_Region", ThisKey="Id_Region", OtherKey="Id", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.Provincias.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.Provincias.Add(this);
						this._Id_Region = value.Id;
					}
					else
					{
						this._Id_Region = default(decimal);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Direccions(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Provincia1 = this;
		}
		
		private void detach_Direccions(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.Provincia1 = null;
		}
		
		private void attach_Comunas(Comuna entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = this;
		}
		
		private void detach_Comunas(Comuna entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = null;
		}
	}
}
#pragma warning restore 1591
